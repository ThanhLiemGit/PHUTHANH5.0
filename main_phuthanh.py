from fastapi import FastAPI, Request
from logic_phuthanh import check_address
import os
import requests
import re
import openai

app = FastAPI()

# L·∫•y token Telegram v√† c·∫•u h√¨nh GPT
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
API_URL = f"https://api.telegram.org/bot{TOKEN}"
USE_GPT = os.getenv("USE_GPT", "true").lower() == "true"
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# C·∫•u h√¨nh GPT (Together API)
if USE_GPT and OPENAI_API_KEY:
    openai.api_key = OPENAI_API_KEY
    openai.base_url = "https://api.together.xyz/v1"

# H√†m ki·ªÉm tra ƒë·ªãnh d·∫°ng ƒë·ªãa ch·ªâ
def is_address(text: str):
    pattern = r"^\d+[a-zA-Z]?(?:/\d+)*(?:\s+duong)?\s+[a-z\s]+$"
    return re.match(pattern, text) is not None

# H√†m g·ª≠i tin nh·∫Øn Telegram
def send(chat_id, text):
    requests.post(f"{API_URL}/sendMessage", json={"chat_id": chat_id, "text": text})

# H√†m x·ª≠ l√Ω GPT
def gpt_reply(prompt):
    try:
        print("üîÅ G·ªçi GPT v·ªõi prompt:", prompt)
        client = openai.OpenAI()
        response = openai.ChatCompletion.create(
            model="mistralai/Mixtral-8x7B-Instruct-v0.1",
            messages=[
                {
                    "role": "system",
                    "content": "B·∫°n l√† tr·ª£ l√Ω h√†nh ch√≠nh ph∆∞·ªùng Ph√∫ Th·∫°nh, Qu·∫≠n T√¢n Ph√∫. H√£y tr·∫£ l·ªùi th√¢n thi·ªán v√† ch√≠nh x√°c theo ng·ªØ c·∫£nh ƒë·ªãa ph∆∞∆°ng."
                },
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print("‚ùå L·ªói GPT:", e)
        return "‚ö†Ô∏è Xin l·ªói, t√¥i ƒëang g·∫∑p s·ª± c·ªë khi truy c·∫≠p GPT. Vui l√≤ng th·ª≠ l·∫°i sau."

# Webhook Telegram
@app.post("/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    if "message" in data and "text" in data["message"]:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"]["text"]
        if is_address(text):
            reply = check_address(text)
        elif USE_GPT:
            reply = gpt_reply(text)
        else:
            reply = "‚ùó Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ theo m·∫´u: 3/11 Hi·ªÅn V∆∞∆°ng"
        send(chat_id, reply)
    return {"ok": True}
